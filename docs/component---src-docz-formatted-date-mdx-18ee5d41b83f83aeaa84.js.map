{"version":3,"sources":["webpack:///../src/__docz__/formatted-date.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","of","FormattedDate","__position","__code","__scope","Playground","Props","date","Date","today","getFullYear","getMonth","getDate","getHours","getMinutes","yesterday","fiveDaysAgo","isMDXComponent"],"mappings":"gRAUaA,G,UAAe,S,iNAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,YAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,kBACE,GAAM,iBADR,iBAGA,kBACE,GAAM,cADR,cAGA,YAAC,IAAD,CAAOC,GAAIC,gBAAeF,QAAQ,UAClC,kBACE,GAAM,oBADR,oBAGA,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,8HAAiIC,SAAO,GACzKN,QACAH,kBACAU,eACAC,UACAL,+BALyK,gBAMzKN,IANyK,EAOzKH,eAPyK,GAQxKO,QAAQ,eACV,WAEG,OAAO,YAAC,gBAAD,CAAeQ,KAAM,IAAIC,KADT,4BAC+BT,QAAQ,qBAGlE,kBACE,GAAM,SADR,SAGA,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,kTAAmTC,SAAO,GAC3VN,QACAH,kBACAU,eACAC,UACAL,+BAL2V,gBAM3VN,IAN2V,EAO3VH,eAP2V,GAQ1VO,QAAQ,eACV,WACG,IAAMU,EAAQ,IAAID,KAClB,OAAO,YAAC,gBAAD,CAAeD,KAAM,IAAIC,KAAKC,EAAMC,cAAeD,EAAME,WAAYF,EAAMG,UAAWH,EAAMI,WAAYJ,EAAMK,aAAe,EAAG,GAAIf,QAAQ,qBAGvJ,kBACE,GAAM,aADR,aAGA,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,iQAAkQC,SAAO,GAC1SN,QACAH,kBACAU,eACAC,UACAL,+BAL0S,gBAM1SN,IAN0S,EAO1SH,eAP0S,GAQzSO,QAAQ,eACV,WACG,IAAMU,EAAQ,IAAID,KACZO,EAAY,IAAIP,KAAKC,EAAMC,cAAeD,EAAME,WAAYF,EAAMG,UAAY,EAAGH,EAAMI,WAAYJ,EAAMK,aAAe,EAAG,GACjI,OAAO,YAAC,gBAAD,CAAeP,KAAMQ,EAAWhB,QAAQ,qBAGnD,kBACE,GAAM,cADR,cAGA,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,qQAAsQC,SAAO,GAC9SN,QACAH,kBACAU,eACAC,UACAL,+BAL8S,gBAM9SN,IAN8S,EAO9SH,eAP8S,GAQ7SO,QAAQ,eACV,WACG,IAAMU,EAAQ,IAAID,KACZQ,EAAc,IAAIR,KAAKC,EAAMC,cAAeD,EAAME,WAAYF,EAAMG,UAAY,EAAGH,EAAMI,WAAYJ,EAAMK,aAAe,EAAG,GACnI,OAAO,YAAC,gBAAD,CAAeP,KAAMS,EAAajB,QAAQ,2B,+MAOzDH,EAAWqB,gBAAiB","file":"component---src-docz-formatted-date-mdx-18ee5d41b83f83aeaa84.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/arty/02_Yandex_work/react-developer-burger-ui-components/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { FormattedDate } from '../';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"formatteddate\"\n    }}>{`FormattedDate`}</h1>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={FormattedDate} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"date-from-string\"\n    }}>{`Date from string`}</h2>\n    <Playground __position={1} __code={'() => {\\n  const dateFromServer = \\'2022-10-10T17:33:32.877Z\\'\\n  return <FormattedDate date={new Date(dateFromServer)} />\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      FormattedDate,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    {() => {\n        const dateFromServer = '2022-10-10T17:33:32.877Z';\n        return <FormattedDate date={new Date(dateFromServer)} mdxType=\"FormattedDate\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"today\"\n    }}>{`Today`}</h2>\n    <Playground __position={2} __code={'() => {\\n  const today = new Date()\\n  return (\\n    <FormattedDate\\n      date={\\n        new Date(\\n          today.getFullYear(),\\n          today.getMonth(),\\n          today.getDate(),\\n          today.getHours(),\\n          today.getMinutes() - 1,\\n          0,\\n        )\\n      }\\n    />\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      FormattedDate,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    {() => {\n        const today = new Date();\n        return <FormattedDate date={new Date(today.getFullYear(), today.getMonth(), today.getDate(), today.getHours(), today.getMinutes() - 1, 0)} mdxType=\"FormattedDate\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"yesterday\"\n    }}>{`Yesterday`}</h2>\n    <Playground __position={3} __code={'() => {\\n  const today = new Date()\\n  const yesterday = new Date(\\n    today.getFullYear(),\\n    today.getMonth(),\\n    today.getDate() - 1,\\n    today.getHours(),\\n    today.getMinutes() - 1,\\n    0,\\n  )\\n  return <FormattedDate date={yesterday} />\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      FormattedDate,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    {() => {\n        const today = new Date();\n        const yesterday = new Date(today.getFullYear(), today.getMonth(), today.getDate() - 1, today.getHours(), today.getMinutes() - 1, 0);\n        return <FormattedDate date={yesterday} mdxType=\"FormattedDate\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"5-days-ago\"\n    }}>{`5 days ago`}</h2>\n    <Playground __position={4} __code={'() => {\\n  const today = new Date()\\n  const fiveDaysAgo = new Date(\\n    today.getFullYear(),\\n    today.getMonth(),\\n    today.getDate() - 5,\\n    today.getHours(),\\n    today.getMinutes() - 1,\\n    0,\\n  )\\n  return <FormattedDate date={fiveDaysAgo} />\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      FormattedDate,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    {() => {\n        const today = new Date();\n        const fiveDaysAgo = new Date(today.getFullYear(), today.getMonth(), today.getDate() - 5, today.getHours(), today.getMinutes() - 1, 0);\n        return <FormattedDate date={fiveDaysAgo} mdxType=\"FormattedDate\" />;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}